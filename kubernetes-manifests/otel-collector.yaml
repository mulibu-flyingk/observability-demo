apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector
  namespace: otel
  labels:
    app: opentelemetry
    component: otel-collector
data:
  otel-collector-config: |
    receivers:
      opencensus:
        endpoint: 0.0.0.0:55678
    exporters:
      prometheus:
        endpoint: "0.0.0.0:8889"
        # namespace: load-generator-metrics
        # const_labels:
        #   app: load-generator
      logging:
      zipkin:
        endpoint: "http://zipkin-all-in-one.otel.svc.cluster.local:9411/api/v2/spans"
        format: proto
      jaeger:
        endpoint: jaeger-all-in-one.otel.svc.cluster.local:14250
        insecure: true
      # Alternatively, use jaeger_thrift_http with the settings below. In this case
      # update the list of exporters on the traces pipeline.
      #
      #  jaeger_thrift_http:
      #    url: http://jaeger-all-in-one.otel.svc.cluster.local:14268/api/traces
    processors:
      batch:
      memory_limiter:
        # Same as --mem-ballast-size-mib CLI argument
        ballast_size_mib: 165
        # 80% of maximum memory up to 2G
        limit_mib: 400
        # 25% of limit up to 2G
        spike_limit_mib: 100
        check_interval: 5s
    extensions:
      health_check:
      pprof:
        endpoint: :1888
      zpages:
        endpoint: :55679
    service:
      extensions: [pprof, zpages, health_check]
      pipelines:
        traces:
          receivers: [opencensus]
          exporters: [logging, zipkin, jaeger]
          processors: [batch, memory_limiter]
        metrics:
          receivers: [opencensus]
          exporters: [logging,prometheus]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  namespace: otel
  labels:
    app: opentelemetry
    component: otel-collector
spec:
  selector:
    matchLabels:
      app: opentelemetry
      component: otel-collector
  minReadySeconds: 5
  progressDeadlineSeconds: 120
  replicas: 1
  template:
    metadata:
      labels:
        app: opentelemetry
        component: otel-collector
    spec:
      containers:
      - command:
          - "/otelcol"
          - "--config=/conf/otel-collector-config.yaml"
#           Memory Ballast size should be max 1/3 to 1/2 of memory.
          - "--mem-ballast-size-mib=683"
        image: otel/opentelemetry-collector-dev:latest
        name: otel-collector
        resources:
          limits:
            cpu: 2
            memory: 4Gi
          requests:
            cpu: 200m
            memory: 400Mi
        ports:
        - containerPort: 1888 # Default endpoint for pprof
        - containerPort: 55679 # Default endpoint for ZPages.
        - containerPort: 13133 # Default endpoint for health_check
        - containerPort: 8888  # Default endpoint for otel-collector metrics.
        - containerPort: 55678 # default port for OpenCensus receiver
        - containerPort: 8889 # default port for prometheus exporter
        # - containerPort: 55680 # Default endpoint for OpenTelemetry receiver.
        # - containerPort: 14250 # Default endpoint for Jaeger HTTP receiver.
        # - containerPort: 14268 # Default endpoint for Jaeger HTTP receiver.
        # - containerPort: 9411 # Default endpoint for Zipkin receiver.
        volumeMounts:
        - name: otel-collector-config-vol
          mountPath: /conf
#        - name: otel-collector-secrets
#          mountPath: /secrets
        livenessProbe:
          httpGet:
            path: /
            port: 13133 # Health Check extension default port.
        readinessProbe:
          httpGet:
            path: /
            port: 13133 # Health Check extension default port.
      volumes:
        - name: otel-collector-config-vol
          configMap:
            name: otel-collector
            items:
              - key: otel-collector-config
                path: otel-collector-config.yaml
#        - secret:
#            name: otel-collector-secrets
#            items:
#              - key: cert.pem
#                path: cert.pem
#              - key: key.pem
#                path: key.pem
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  namespace: otel
  labels:
    app: opentelemetry
    component: otel-collector
spec:
  clusterIP: None  
  selector:
    component: otel-collector
  ports:
    - name: pprof
      protocol: TCP
      port: 1888
      targetPort: 1888
    - name: zpages
      protocol: TCP
      port: 55679
      targetPort: 55679
    - name: health-check
      protocol: TCP
      port: 13133
      targetPort: 13133
    - name: metrics
      protocol: TCP
      port: 8888
      targetPort: 8888
    - name: opencensus-receiver
      protocol: TCP
      port: 55678
      targetPort: 55678
    - name: prom-exporter
      protocol: TCP
      port: 8889
      targetPort: 8889

